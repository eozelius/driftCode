function init_map(dom, driftmap, blips){
	L.Icon.Default.imagePath = '<%= (Rails.root + "/assets/leaflet").to_s %>';
	try {
		var x = driftmap.init_x || 40.735;
		var y = driftmap.init_y || -73.890;
		var z = driftmap.init_zoom || 12;
		var m = window.map = L.map(dom).setView([x, y], z);

		// TODO make this API key a Server environment variable
		L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', 
			{	attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="http://mapbox.com">Mapbox</a>',
	    	maxZoom: 18,
	    	id: 'eozelius77.j4hekake',
	    	accessToken: 'pk.eyJ1IjoiZW96ZWxpdXM3NyIsImEiOiJkQmhDSl8wIn0.MzOmrtAL3uTNmVfLmEZ57g'
			}).addTo(m);

		// Add Markers to Map
		for(var i in blips){
			var popupOptions = {
				offset: [210, 30],
				minWidth: 400,
				className: 'blip-popup'
			}

			var id 		= xss_trim(blips[i].id); 
			var lat 	= xss_trim(blips[i].x);
			var lng 	= xss_trim(blips[i].y);
			var body 	= xss_trim(blips[i].body);
			var title = xss_trim(blips[i].title);

			// todo xss protect
			/*
				blip[0] { 
					id: "1", 
					x: "40.743", 
					y: "-73.922",
					title: "Sunnyside Queens", 
					body: "7 train", 
					images: [
						"<img src="/uploads/blip_image/image/1/bogota.jpg" alt="Bogota" />",
						"<img src="/uploads/blip_image/image/1/bogota.jpg" alt="Bogota" />"
					] 
				}
			*/

			var blip_images_tags = '';
			
			for(var x in blips[i].images){
				console.log("building Image: " + blips[i].images[x]);
				blip_images_tags += '<p>' + blips[i].images[x] + '</p>';
			}

			var popupContent =  '<div class="marker-content-wrapper">' + 
														'<p class="instructions">'+ title +'</p>' + 
														'<p>'+ body +'</p>' + 
														blip_images_tags +
														'<p><a data-confirm="Are you sure?" rel="nofollow" data-method="delete" href="/blips/'+ blips[i].id +'">delete</a></p>' +
													'</div>';

			var blipMarker = L.marker([lat, lng]).addTo(m);
			var blipPopup  = L.popup(popupOptions).setLatLng([lat, lng]).setContent(popupContent);
			blipMarker.bindPopup(blipPopup);
		}

	} catch(e) {
		console.log('error: ' + e);
		flash_now('danger', 'whoops, something went wrong.  Please try again.')
		window.DMIniterror = e;
	}	
}

function add_blip(driftmap, e, blipIndex){
	var lat = e.latlng.lat.toFixed(3);
  var lng = e.latlng.lng.toFixed(3);

  var popupOptions = { 
    className: 'new-blip-box blip-box-' + blipIndex,
    offset: [100, -40]
  }

  var blipContent = '<div class="blip-wrapper-'+ blipIndex +'">' +
	                    '<p class="instructions">Title</p>' +
	                    '<input id="blip-title-'+ blipIndex +'" class="blip-title" name="blip['+ blipIndex +'][title]" data-blip="'+ blipIndex +'" type="text" />' +
	                    '<p class="instructions">Description</p>' +
	                    '<textarea id="blip-body-'+ blipIndex +'" class="blip-body" name="blip['+ blipIndex +'][body]" data-blip="'+ blipIndex +'"></textarea>' +
	                    '<input class="blip-file" name="blip['+ blipIndex +'][photos][0]" id="blip_'+ blipIndex +'_photos_0" data-blip="'+ blipIndex +'" accept="image/jpeg, image/gif, image/png, image/jpg" type="file">' +
	                    '<span class="normal" id="add-new-blip" data-photo="0" data-blip="'+ blipIndex +'"><i class="fa fa-plus"></i> photo</span>' +
	                    '<span class="normal">cancel</span>' +
	                  '</div>';

  var blipMarker = L.marker([lat, lng]).addTo(driftmap);
  var blipPopup  = L.popup(popupOptions).setLatLng([lat, lng]).setContent(blipContent).openOn(driftmap);
  blipMarker.bindPopup(blipPopup);

  var blipInputs = '<input type="hidden" name="blip['+ blipIndex +'][x]" value="'+ lat +'">' + 
                   '<input type="hidden" name="blip['+ blipIndex +'][y]" value="'+ lng +'">';

  $('#post-form-container form').prepend(blipInputs);

  $('.blip-wrapper-'+ blipIndex + ' input').on('change', function(){
  	$('#post-form-container form').prepend($(this).clone().addClass('hidden'));
  });

  $('.blip-wrapper-'+ blipIndex + ' textarea').on('change', function(){
  	var blipIndex = $(this).data('blip');
  	var blipBodyInput = '<input type="hidden" name="blip['+ blipIndex +'][body]" value="'+ $(this).val() +'" class="blip-body" data-blip="'+ blipIndex +'"/>';
  	$('#post-form-container form').prepend(blipBodyInput);
  })

  // Add event listener for 'add another photo button'
  $('#add-new-blip[data-blip="'+ blipIndex +'"]').on('click' , function(){
  	var blipIndex = $(this).data('blip');
  	var photoIndex = $(this).data('photo') + 1;
    var addPhoto = '<input accept="image/jpeg, image/gif, image/png, image/jpg" name="blip['+ blipIndex +'][photos]['+ photoIndex +']" id="blip_'+ blipIndex +'_photos_'+ photoIndex +'" type="file">';

    $(this).before(addPhoto).data('photo', photoIndex);

    $('#blip_'+ blipIndex +'_photos_'+ photoIndex).on('change', function(){
    	$('#post-form-container form').prepend($(this).clone().addClass('hidden'));
    });
  });
} // end add_blip

function flash_now(type, message){
	console.log("type: " + type + "\n message: " + message);

	var flash_msg = '<div style="margin:0; width:100%" class="flash-messages flash-'+ type +' col-lg-12 col-md-12 col-sm-12 col-xs-12"><p class="flash">'+ message +'</p></div>';
	$('.application-container').prepend(flash_msg).removeClass('hidden');
}

function xss_trim(str){
	return String(str)
	.replace(/&/g, '&amp;')
	.replace(/"/g, '&quot;')
	.replace(/'/g, '&#39;')
	.replace(/</g, '&lt;')
	.replace(/>/g, '&gt;')
	.replace('/', '&#x2F');
}
