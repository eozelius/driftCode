var DriftMapLeaflet = function(){
  // Private Variables
  var indexer = []
  var journeyIndexer = []

  L.Icon.Default.imagePath = '<%= (Rails.root + '/assets/leaflet').to_s %>';

  /* Custom Makers */
  var maroonMarker = L.icon({ 
    iconUrl: '<%= (Rails.root + '/assets/leaflet/marker-maroon-icon.png').to_s %>',
    shadowUrl: '<%= (Rails.root + '/assets/leaflet/marker-shadow.png').to_s %>',
    popupAnchor:  [0, -35]
  });

  var blueMarker = L.icon({
    iconUrl: '<%= (Rails.root + '/assets/leaflet/marker-icon.png').to_s %>',
    shadowUrl: '<%= (Rails.root + '/assets/leaflet/marker-shadow.png').to_s %>',
    popupAnchor:  [0, -35]
  });

  // Private Methods
  function getColorScheme(color_scheme){
    var color =''
    switch (color_scheme) {
      case 'normal':
        color = 'https://api.mapbox.com/styles/v1/mapbox/streets-v9/tiles/256/{z}/{x}/{y}';
        break;
      case 'satellite':
        color = 'https://api.mapbox.com/styles/v1/mapbox/satellite-v9/tiles/256/{z}/{x}/{y}';
        break;
      case 'gray':
        color = 'https://api.mapbox.com/styles/v1/mapbox/light-v9/tiles/256/{z}/{x}/{y}';
        break;
      case 'dark':
        color = 'https://api.mapbox.com/styles/v1/mapbox/dark-v9/tiles/256/{z}/{x}/{y}';
        break;
      default:
        color = 'https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png'; // default offwhite on blue
        break;
    }
    return color;
  }

  function drawMap(driftmap){
    var mapColor = getColorScheme(driftmap.color)
    m = L.map('map').setView([driftmap.init_x, driftmap.init_y], driftmap.init_zoom);
    L.tileLayer(mapColor + '?access_token={accessToken}',
      { attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="http://mapbox.com">Mapbox</a>',
        maxZoom: 18,
        minZoom: 3,
        id: 'eozelius77.j4hekake',
        accessToken: "<%= ENV['MAPBOX_SECRET_KEY'] %>"
      }).addTo(m);

    // Zoom in/out buttons should be in top right, instead of top left.
    $('.leaflet-control-container .leaflet-top.leaflet-left').removeClass('leaflet-top').addClass('leaflet-bottom')
  }

  function constructJourneyPopup(journey, waypoints){
    var journeyPopupContent = ''
    var lat = journey.x;
    var lng = journey.y;
    var j_popupContent =  '<div class="waypoint-popup" data-waypoint="'+ journey.id +'">' +
                            '<div class="waypoint-text">' +
                              '<h4 class="waypoint-popup-title">'+ journey.title +'</h4>' +
                              '<p class="waypoint-popup-body ">';
    // Coverphoto
    if(journey.coverphoto.url != null){
      j_popupContent += '<img class="waypoint-popup-coverphoto" src="'+ journey.coverphoto.url +'">';
    }

    // Description
    j_popupContent += journey.description +

    // Closing Tags
      '</p>' +
      '</div>' +

    // Waypoints Preview
      '<div class="waypoints-preview">' +
      '<ul>';
      for(var w in waypoints){
        j_popupContent += '<li data-waypoint="'+ waypoints[w].id +'">' +
                            '<p class="waypoint-title">' + waypoints[w].title + '</p>';
      }

    // Closing Tags
    j_popupContent +=
      '</ul>' +
      '</div>' +
      '</div>';

    // Add Marker & Popup to LeafletMap
    var jMarker = L.marker([lat, lng]).addTo(m);
    var jPopup  = L.popup({ className: 'waypoint-popup' }).setLatLng([lat, lng]).setContent(j_popupContent);
    jMarker.bindPopup(jPopup);

    journeyIndexer.push({
      id: journey.id,
      leaflet: {
        marker: jMarker,
        popup: jPopup
      }
    });
    return true;
  }

  function constructWaypointPopup(waypoint){
    window.w = waypoint


    /* Add Marker to Map */
    var id  = waypoint.id;
    var lat = waypoint.x;
    var lng = waypoint.y;
    var title = waypoint.title;
    var body  = waypoint.body;

    /* Bind popup to marker */
    var popupContent = '<div class="waypoint-popup">';

    if(waypoint.coverphoto.url != null){
      popupContent += '<img class="waypoint-popup-coverphoto" src="'+ waypoint.coverphoto.url +'" />';
    }

    popupContent += '<h4 class="waypoint-popup-title">'+ title +'</h4>' +

      // Content Icons Menu
      '<ul class="content-icons-menu">';
    // Gallery
    if(waypoint.content.galleries.length > 0){
      popupContent += '<li class="galleries" data-request-type="galleries" data-waypoint="'+ id +'"><i class="fa fa-camera"></i></li>';
    }

    // Friends
    if(waypoint.content.friends.length > 0){
      popupContent += '<li class="friends"   data-request-type="friends"   data-waypoint="'+ id +'"><i class="fa fa-user-circle"></i></li>';
    }

    // Essays
    if(waypoint.content.essays.length > 0) {
      popupContent += '<li class="essays"    data-request-type="essays"    data-waypoint="' + id + '"><i class="fa fa-pencil-square-o"></i></li>';
    }

    // Treks
    if(waypoint.content.treks.length > 0) {
      popupContent += '<li class="treks"     data-request-type="treks"     data-waypoint="' + id + '"><i class="fa fa-compass"></i></li>';
    }

    popupContent +=
      '</ul><div class="clear-fix">' +
      '<div class="waypoint-content-container">' +
      '<div class="waypoint-content">' +

      // Waypoint Body
      '<div class="view-content active">' +
      '<p class="waypoint-popup-body">';

    popupContent += body +
      '</p>' +
      '</div>';

    // Galleries
    popupContent += '<div class="galleries view-content">';
    for (var y in waypoint.content.galleries) {
      var g = waypoint.content.galleries[y];

      if(g.images.length > 0){
        popupContent += '<h4 class="waypoint-title">' + g.title + '</h4>';
        for (var gallery_image in g.images) {
          popupContent += '<img src ="' + g.images[gallery_image].url + '" />';
        }
      }
    }
    popupContent += '</div>';

    // Friends
    popupContent += '<div class="friends view-content">';
    for(var y in waypoint.content.friends){
      var f = waypoint.content.friends[y];
      popupContent +=
        '<h4 class="waypoint-title">' + f.first_name + ' ' + f.last_name + '</h4>' +
        '<p><img src="'+ f.photo.url + '" />' + f.description +'</p>'
    }
    popupContent += '</div>';

    // Essays
    popupContent += '<div class="essays view-content">' +
      '<h4 class="waypoint-title">Essays</h4>';
    for(var y in waypoint.content.essays){
      var e = waypoint.content.essays[y]
      popupContent += '<img src="'+ e.coverphoto.url +'">' +
        '<h4 class="waypoint-title">'+ e.title +'</h4>' +
        '<p>'+ e.body +'</p>';
    }
    popupContent += '</div>' +
      '</div>' +
      '</div>' +
      '</div>' +
      '</div>';

    var popupOptions = { className: 'waypoint-popup' }
    var wpMarker = L.marker([lat, lng]).addTo(m);
    var wpPopup  = L.popup(popupOptions).setLatLng([lat, lng]).setContent(popupContent);
    wpMarker.bindPopup(wpPopup);
    // End waypoint Popup

    /* Add wayPoint to indexer */
    indexer.push({
      id:     waypoint.id,
      title:  title,
      body:   body,
      content: {
        galleries: [],
        friends:   [],
        essays:    [],
        treks:     []
      },
      leaflet: {
        marker: wpMarker,
        popup:  wpPopup
      }
    });
  }

  function drawLeafletComponents(journeys){
    for(var j in journeys){
      if(journeys[j].journey !== undefined && journeys[j].waypoints !== undefined){
        constructJourneyPopup(journeys[j].journey, journeys[j].waypoints)

        for(var w in journeys[j].waypoints){
          constructWaypointPopup(journeys[j].waypoints[w])
        }
      }
    }
  }

  /* Event Listeners */

  // Goto Journey from Right Hud
  $(document).on('click', '.hud-bottom h6', function () {
    var j = DriftMapLeaflet.getJourney($(this).data('journey'))
    j.leaflet.popup.openOn(m)
  })

  // Goto Waypoint from Journey Leaflet Popup or Right Hud
  $(document).on('click', '.waypoints-preview li, .hud-bottom p', function () {
    var wp = DriftMapLeaflet.getWayPoint($(this).data('waypoint'))
    wp.leaflet.popup.openOn(m)
  })

  // Goto Waypoint content
  $(document).on('click', '.content-icons-menu li', function(){
    var type  = $(this).data('request-type').toString();
    $('.waypoint-content .view-content').removeClass('active')
    $('.waypoint-content .' + type).addClass('active')
  })

  return {
    // public variables

    // public methods
    init: function(data){
      drawMap(data.driftmap);
      drawLeafletComponents(data.journeys)

      if(data.journeys.length > 1){
        journeyIndexer[0].leaflet.marker.setIcon(maroonMarker)
        journeyIndexer[0].leaflet.popup.openOn(m)
      }
    },

    defaultInit: function(){
      var d = new Date()

      var data = [{
        journey: {
          id: 0,
          description: '',
          title: '',
          driftmap_id: 0,
          coverphoto: false,
          timeline: false
        },

        waypoints: [{
          id: 0,
          title: '',
          body: '',
          x: 0,
          y: 0,
          driftmap_id: 0,
          journey_id: 0,
          date: {
            year: d.getFullYear(),
            month: d.getMonth(),
            day: d.getDay()
          },
          images: []
        }]
      }]

      /*var myOpts = {
        init_x: 0.924206230200376,
        init_y: -40.2400771379471,
        init_zoom: 2
      }*/

      DriftMapLeaflet.init(data)
    },

    /* Getters */
    getWayPoint: function(id){
      for(var i in indexer)
        if(indexer[i].id == id)
          return indexer[i];
      return false;
    },

    getJourney: function (id) {
      for(var i in journeyIndexer)
        if(journeyIndexer[i].id == id)
          return journeyIndexer[i];
        return false;
    }
  }
}();